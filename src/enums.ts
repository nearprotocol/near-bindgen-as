/** An enum of named character codes. */
export const enum CharCode {
  NULL = 0,
  LINEFEED = 0x0A,
  CARRIAGERETURN = 0x0D,
  LINESEPARATOR = 0x2028,
  PARAGRAPHSEPARATOR = 0x2029,
  NEXTLINE = 0x0085,

  SPACE = 0x20,
  NONBREAKINGSPACE = 0xA0,
  ENQUAD = 0x2000,
  EMQUAD = 0x2001,
  ENSPACE = 0x2002,
  EMSPACE = 0x2003,
  THREEPEREMSPACE = 0x2004,
  FOURPEREMSPACE = 0x2005,
  SIXPEREMSPACE = 0x2006,
  FIGURESPACE = 0x2007,
  PUNCTUATIONSPACE = 0x2008,
  THINSPACE = 0x2009,
  HAIRSPACE = 0x200A,
  ZEROWIDTHSPACE = 0x200B,
  NARROWNOBREAKSPACE = 0x202F,
  IDEOGRAPHICSPACE = 0x3000,
  MATHEMATICALSPACE = 0x205F,
  OGHAM = 0x1680,

  _ = 0x5F,

  _0 = 0x30,
  _1 = 0x31,
  _2 = 0x32,
  _3 = 0x33,
  _4 = 0x34,
  _5 = 0x35,
  _6 = 0x36,
  _7 = 0x37,
  _8 = 0x38,
  _9 = 0x39,

  a = 0x61,
  b = 0x62,
  c = 0x63,
  d = 0x64,
  e = 0x65,
  f = 0x66,
  g = 0x67,
  h = 0x68,
  i = 0x69,
  j = 0x6A,
  k = 0x6B,
  l = 0x6C,
  m = 0x6D,
  n = 0x6E,
  o = 0x6F,
  p = 0x70,
  q = 0x71,
  r = 0x72,
  s = 0x73,
  t = 0x74,
  u = 0x75,
  v = 0x76,
  w = 0x77,
  x = 0x78,
  y = 0x79,
  z = 0x7A,

  A = 0x41,
  B = 0x42,
  C = 0x43,
  D = 0x44,
  E = 0x45,
  F = 0x46,
  G = 0x47,
  H = 0x48,
  I = 0x49,
  J = 0x4A,
  K = 0x4B,
  L = 0x4C,
  M = 0x4D,
  N = 0x4E,
  O = 0x4F,
  P = 0x50,
  Q = 0x51,
  R = 0x52,
  S = 0x53,
  T = 0x54,
  U = 0x55,
  V = 0x56,
  W = 0x57,
  X = 0x58,
  Y = 0x59,
  Z = 0x5a,

  AMPERSAND = 0x26,
  ASTERISK = 0x2A,
  AT = 0x40,
  BACKSLASH = 0x5C,
  BACKTICK = 0x60,
  BAR = 0x7C,
  CARET = 0x5E,
  CLOSEBRACE = 0x7D,
  CLOSEBRACKET = 0x5D,
  CLOSEPAREN = 0x29,
  COLON = 0x3A,
  COMMA = 0x2C,
  DOLLAR = 0x24,
  DOT = 0x2E,
  DOUBLEQUOTE = 0x22,
  EQUALS = 0x3D,
  EXCLAMATION = 0x21,
  GREATERTHAN = 0x3E,
  HASH = 0x23,
  LESSTHAN = 0x3C,
  MINUS = 0x2D,
  OPENBRACE = 0x7B,
  OPENBRACKET = 0x5B,
  OPENPAREN = 0x28,
  PERCENT = 0x25,
  PLUS = 0x2B,
  QUESTION = 0x3F,
  SEMICOLON = 0x3B,
  SINGLEQUOTE = 0x27,
  SLASH = 0x2F,
  TILDE = 0x7E,

  BACKSPACE = 0x08,
  FORMFEED = 0x0C,
  BYTEORDERMARK = 0xFEFF,
  TAB = 0x09,
  VERTICALTAB = 0x0B
}

export enum Token {
  ABSTRACT = 0,
  AS = 1,
  ASYNC = 2,
  AWAIT = 3,
  BREAK = 4,
  CASE = 5,
  CATCH = 6,
  CLASS = 7,
  CONST = 8,
  CONTINUE = 9,
  CONSTRUCTOR = 10,
  DEBUGGER = 11,
  DECLARE = 12,
  DEFAULT = 13,
  DELETE = 14,
  DO = 15,
  ELSE = 16,
  ENUM = 17,
  EXPORT = 18,
  EXTENDS = 19,
  FALSE = 20,
  FINALLY = 21,
  FOR = 22,
  FROM = 23,
  FUNCTION = 24,
  GET = 25,
  IF = 26,
  IMPLEMENTS = 27,
  IMPORT = 28,
  IN = 29,
  INSTANCEOF = 30,
  INTERFACE = 31,
  IS = 32,
  KEYOF = 33,
  LET = 34,
  MODULE = 35,
  NAMESPACE = 36,
  NEW = 37,
  NULL = 38,
  OF = 39,
  PACKAGE = 40,
  PRIVATE = 41,
  PROTECTED = 42,
  PUBLIC = 43,
  READONLY = 44,
  RETURN = 45,
  SET = 46,
  STATIC = 47,
  SUPER = 48,
  SWITCH = 49,
  THIS = 50,
  THROW = 51,
  TRUE = 52,
  TRY = 53,
  TYPE = 54,
  TYPEOF = 55,
  VAR = 56,
  VOID = 57,
  WHILE = 58,
  WITH = 59,
  YIELD = 60,
  OPENBRACE = 61,
  CLOSEBRACE = 62,
  OPENPAREN = 63,
  CLOSEPAREN = 64,
  OPENBRACKET = 65,
  CLOSEBRACKET = 66,
  DOT = 67,
  DOT_DOT_DOT = 68,
  SEMICOLON = 69,
  COMMA = 70,
  LESSTHAN = 71,
  GREATERTHAN = 72,
  LESSTHAN_EQUALS = 73,
  GREATERTHAN_EQUALS = 74,
  EQUALS_EQUALS = 75,
  EXCLAMATION_EQUALS = 76,
  EQUALS_EQUALS_EQUALS = 77,
  EXCLAMATION_EQUALS_EQUALS = 78,
  EQUALS_GREATERTHAN = 79,
  PLUS = 80,
  MINUS = 81,
  ASTERISK_ASTERISK = 82,
  ASTERISK = 83,
  SLASH = 84,
  PERCENT = 85,
  PLUS_PLUS = 86,
  MINUS_MINUS = 87,
  LESSTHAN_LESSTHAN = 88,
  GREATERTHAN_GREATERTHAN = 89,
  GREATERTHAN_GREATERTHAN_GREATERTHAN = 90,
  AMPERSAND = 91,
  BAR = 92,
  CARET = 93,
  EXCLAMATION = 94,
  TILDE = 95,
  AMPERSAND_AMPERSAND = 96,
  BAR_BAR = 97,
  QUESTION = 98,
  COLON = 99,
  EQUALS = 100,
  PLUS_EQUALS = 101,
  MINUS_EQUALS = 102,
  ASTERISK_EQUALS = 103,
  ASTERISK_ASTERISK_EQUALS = 104,
  SLASH_EQUALS = 105,
  PERCENT_EQUALS = 106,
  LESSTHAN_LESSTHAN_EQUALS = 107,
  GREATERTHAN_GREATERTHAN_EQUALS = 108,
  GREATERTHAN_GREATERTHAN_GREATERTHAN_EQUALS = 109,
  AMPERSAND_EQUALS = 110,
  BAR_EQUALS = 111,
  CARET_EQUALS = 112,
  AT = 113,
  IDENTIFIER = 114,
  STRINGLITERAL = 115,
  INTEGERLITERAL = 116,
  FLOATLITERAL = 117,
  INVALID = 118,
  ENDOFFILE = 119
}

export enum CommonFlags {
  /** No flags set. */
  NONE = 0,
  /** Has an `import` modifier. */
  IMPORT = 1,
  /** Has an `export` modifier. */
  EXPORT = 2,
  /** Has a `declare` modifier. */
  DECLARE = 4,
  /** Has a `const` modifier. */
  CONST = 8,
  /** Has a `let` modifier. */
  LET = 16,
  /** Has a `static` modifier. */
  STATIC = 32,
  /** Has a `readonly` modifier. */
  READONLY = 64,
  /** Has an `abstract` modifier. */
  ABSTRACT = 128,
  /** Has a `public` modifier. */
  PUBLIC = 256,
  /** Has a `private` modifier. */
  PRIVATE = 512,
  /** Has a `protected` modifier. */
  PROTECTED = 1024,
  /** Has a `get` modifier. */
  GET = 2048,
  /** Has a `set` modifier. */
  SET = 4096,
  /** Has a definite assignment assertion `!` as in `x!: i32;`. */
  DEFINITE_ASSIGNMENT = 8192,
  /** Is ambient, that is either declared or nested in a declared element. */
  AMBIENT = 16384,
  /** Is generic. */
  GENERIC = 32768,
  /** Is part of a generic context. */
  GENERIC_CONTEXT = 65536,
  /** Is an instance member. */
  INSTANCE = 131072,
  /** Is a constructor. */
  CONSTRUCTOR = 262144,
  /** Is a module export. */
  MODULE_EXPORT = 524288,
  /** Is a module import. */
  MODULE_IMPORT = 1048576,
  /** Is resolved. */
  RESOLVED = 2097152,
  /** Is compiled. */
  COMPILED = 4194304,
  /** Has a constant value and is therefore inlined. */
  INLINED = 8388608,
  /** Is scoped. */
  SCOPED = 16777216,
  /** Is a trampoline. */
  TRAMPOLINE = 33554432,
  /** Is a virtual method. */
  VIRTUAL = 67108864,
  /** Is the main function. */
  MAIN = 134217728,
  /** Is quoted. */
  QUOTED = 268435456
}

/** Indicates the kind of a node. */
export enum NodeKind {
  SOURCE = 0,
  NAMEDTYPE = 1,
  FUNCTIONTYPE = 2,
  TYPENAME = 3,
  TYPEPARAMETER = 4,
  PARAMETER = 5,
  IDENTIFIER = 6,
  ASSERTION = 7,
  BINARY = 8,
  CALL = 9,
  CLASS = 10,
  COMMA = 11,
  ELEMENTACCESS = 12,
  FALSE = 13,
  FUNCTION = 14,
  INSTANCEOF = 15,
  LITERAL = 16,
  NEW = 17,
  NULL = 18,
  PARENTHESIZED = 19,
  PROPERTYACCESS = 20,
  TERNARY = 21,
  SUPER = 22,
  THIS = 23,
  TRUE = 24,
  CONSTRUCTOR = 25,
  UNARYPOSTFIX = 26,
  UNARYPREFIX = 27,
  BLOCK = 28,
  BREAK = 29,
  CONTINUE = 30,
  DO = 31,
  EMPTY = 32,
  EXPORT = 33,
  EXPORTDEFAULT = 34,
  EXPORTIMPORT = 35,
  EXPRESSION = 36,
  FOR = 37,
  IF = 38,
  IMPORT = 39,
  RETURN = 40,
  SWITCH = 41,
  THROW = 42,
  TRY = 43,
  VARIABLE = 44,
  VOID = 45,
  WHILE = 46,
  CLASSDECLARATION = 47,
  ENUMDECLARATION = 48,
  ENUMVALUEDECLARATION = 49,
  FIELDDECLARATION = 50,
  FUNCTIONDECLARATION = 51,
  IMPORTDECLARATION = 52,
  INDEXSIGNATUREDECLARATION = 53,
  INTERFACEDECLARATION = 54,
  METHODDECLARATION = 55,
  NAMESPACEDECLARATION = 56,
  TYPEDECLARATION = 57,
  VARIABLEDECLARATION = 58,
  DECORATOR = 59,
  EXPORTMEMBER = 60,
  SWITCHCASE = 61,
  COMMENT = 62
}

export enum SourceKind {
  /** User-provided file. */
  USER = 0,
  /** User-provided entry file. */
  USER_ENTRY = 1,
  /** Library-provided file. */
  LIBRARY = 2,
  /** Library-provided entry file. */
  LIBRARY_ENTRY = 3
}

/** Represents the kind of a parameter. */
export enum ParameterKind {
  /** No specific flags. */
  DEFAULT = 0,
  /** Is an optional parameter. */
  OPTIONAL = 1,
  /** Is a rest parameter. */
  REST = 2
}

export enum LiteralKind {
  FLOAT = 0,
  INTEGER = 1,
  STRING = 2,
  REGEXP = 3,
  ARRAY = 4,
  OBJECT = 5
}